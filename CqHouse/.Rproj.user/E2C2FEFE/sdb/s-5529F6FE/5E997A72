{
    "collab_server" : "",
    "contents" : "---\ntitle: \"House Notebook\"\noutput: html_notebook\n---\n\nThis is an [R Markdown](http://rmarkdown.rstudio.com) Notebook. When you execute code within the notebook, the results appear beneath the code. \n\nTry executing this chunk by clicking the *Run* button within the chunk or by placing your cursor inside it and pressing *Ctrl+Shift+Enter*. \n\nAdd a new chunk by clicking the *Insert Chunk* button on the toolbar or by pressing *Ctrl+Alt+I*.\n\nWhen you save the notebook, an HTML file containing the code and output will be saved alongside it (click the *Preview* button or press *Ctrl+Shift+K* to preview the HTML file).\n\n# 1.read file\n\n```{r}\nlibrary(dplyr)\nlibrary(Hmisc)\nlibrary(ggplot2)\nlibrary(caret)\n```\n\n\n\n```{r}\ncq <- read.csv(\"cq2.csv\",sep = \",\", stringsAsFactors = FALSE)\ncq <- cq[, -11]\nnames(cq) <- c('名字','户型','面积','朝向','装修','电梯','楼层','区域','价格(万元)','单价(平方米)')\n\nhead(cq)\n```\n\n## clean the data, delete the rows with NA and delete the rows which is 别墅 \n\n```{r}\n# delete the row with NA\ncq2data <-na.omit(cq)\n# delete 别墅 data\nbieshuIndex  <- grep(\"..别墅\",cq2data$户型)\ncq2data <- cq2data[-bieshuIndex,]\nhead(cq2data)\n```\n\n# 2. Start to analysis the data\n\n## a. Type disturbution\n\n```{r}\n# load library\nlibrary(ggplot2)\n\n# show the different type houses' frquency\ntype_freq <- data.frame(table(cq2data$户型))\ntype_p <- ggplot(data = type_freq, mapping = aes(x = reorder(Var1, -Freq),y = Freq)) + geom_bar(stat = 'identity', fill = 'steelblue') + theme(axis.text.x  = element_text(angle = 30, vjust = 0.5)) + xlab('户型') + ylab('套数')\n```\n\n```{r}\ntype_p\n```\n> 我们发现只有少数几种的户型数量比较多，其余的都非常少，明显属于长尾分布类型，所以，考虑将100套一下的户型统统归为一类。设置为其他.\n\n```{r}\ntype_tag <- c('3室2厅','4室2厅','2室2厅','1室1厅','2室1厅','1室0厅')\n# 重新划分户型(三目运算符) 这里有点问题,先曲线酒国了\n# as.character function can convert factor into charactor\nhx <- as.character(cq2data$户型)\ncq2data$type.new <- ifelse(hx  %in% type_tag, hx , '其他')\n\n# 查看户型分布\ntype_freq <- data.frame(table(cq2data$type.new))\n# 绘图\ntype_p <- ggplot(data = type_freq, mapping = aes(x = reorder(Var1, -Freq),y = Freq)) + geom_bar(stat = 'identity', fill = 'steelblue') + theme(axis.text.x  = element_text(angle = 30, vjust = 0.5)) + xlab('户型') + ylab('套数')\ntype_p\n```\n\n## b. Aera and unit_price distribution test\n\n```{r}\n# split the 面积 column and transfer str into numeric\ncq2data$aera <- as.numeric(strsplit(cq2data$面积, \"平米\"))\n```\n\n> Aera normal distribution test\n\n```{r}\nsource(\"norm.test.R\")\nnorm.test(cq2data$aera)\n```\n\n> unit_price normal distribution test\n\n```{r}\nnorm.test(as.numeric(cq2data$`单价(平方米)`))\n```\n\n**As we can see from the plots above, the aera and unit_price do not satisfy the normal distribution**\n\n## Floor distribution\n```{r}\n# split the data to get floor info\ncq2data$floor <- substring(cq2data$楼层,1,3)\n# floor freq\nfloor_freq <- table(cq2data$floor)\n# calculate the percent of each factor\npercent <- paste(round(prop.table(floor_freq)*100,2),'%', sep = '')\ndf <- data.frame(floor_freq)\ndf <- cbind(df, percent)\ndf\n```\n**As the data shows above, the percent of each floor type is almost the same, except for 地下室\t!!!**\n\n## Show the average unit_price of each aera in Chongqing\n\n```{r}\n# cal the average price and sort the data by region\navg_price <- aggregate(cq2data$`单价(平方米)`, by = list(cq2data$区域), mean)\n\n# plot\np <- ggplot(data = avg_price, mapping = aes(x = reorder(Group.1, -x), y = x, group = 1)) + geom_area(fill = 'lightgreen') + geom_line(colour = 'steelblue', size = 2) + geom_point() + xlab('') + ylab('均价') + theme(axis.text.x  = element_text(angle = 90, vjust = 0.5))\np\n```\n#### Obviously, 江北嘴 is the most expensive region, which is over 15000. The other places' unit_price is almost 10000 yuan.\n\n# 3. Build model\n> Use K-means algorithm to clustering all the data\n> 聚类原则：组内差距要小，组间差距要大\n> 这里选择面积、房价和单价三个数值型变量\n\n> a self-define function to show the cluster number\n\n```{r}\ntot.wssplot <- function(data, nc, seed=1234){\n  #假设分为一组时的总的离差平方和              \n  tot.wss <- (nrow(data)-1)*sum(apply(data,2,var)) \n  for (i in 2:nc){\n    #必须指定随机种子数\n    set.seed(seed) \n    tot.wss[i] <- kmeans(data, centers=i, iter.max = 100)$tot.withinss\n  }\n  plot(1:nc, tot.wss, type=\"b\", xlab=\"Number of Clusters\",\n       ylab=\"Within groups sum of squares\",col = 'blue',\n       lwd = 2, main = 'Choose best Clusters')\n}\n```\n\n**scale函数是将一组数进行处理，默认情况下是将一组数的每个数都减去这组数的平均值后再除以这组数的均方根。**\n\n```{r}\nstandard_data <- data.frame(scale(cq2data[,c('aera','单价(平方米)','价格(万元)')]))\nmy.plot <- tot.wssplot(standard_data, nc=15)\n```\nWhen there is onlu one cluster, the group square sum of squares is biggest. When number of Cluster increas, square sum decreas. **As the plot shows, when the number is 5, square sum decreas slower. So, I decide to choose 6 as cluster numbers.**\n\n## Use kmeans to cluster the cq2data\n```{r}\nset.seed(1234)\nclust <- kmeans(x = standard_data, centers = 4, iter.max = 100)\ntable(clust$cluster)\n```\n\n> show the region distribution by cluster result\n\n```{r}\n# show the region distribution by cluster result\ntable(cq2data$区域,clust$cluster)\n```\n\n> cal the average aera of each type\n\n```{r}\n# cal the average aera of each type\naggregate(cq2data$aera, list(cq2data$type.new), mean)\n```\n\n> Compare the average aera, average price and average unit_price by cluster result\n\n```{r}\naggregate(cq2data[,c('aera','单价(平方米)','价格(万元)')], list(clust$cluster), mean)\n```\n\n\n```{r}\np <- ggplot(data = cq2data[,c('aera','价格(万元)')], mapping = aes(x = 'aera',y = '价格(万元)', color = factor(clust$cluster)))\np\np <- p + geom_point(pch = 20, size = 3)\np + scale_colour_manual(values = c(\"red\",\"blue\", \"green\", \"black\", \"orange\",'purple'))\n```\n\n```{r}\n# transfer those data into factor\ncq2data$cluster <- factor(clust$cluster)\ncq2data$floor <- factor(cq2data$floor)\ncq2data$type.new <- factor(cq2data$type.new)\n```\n\n```{r}\n# 筛选出所有因子型变量\nfactors <- names(cq2data)[sapply(cq2data, class) == 'factor']\nformula <- f <- as.formula(paste('~', paste(factors, collapse = '+')))\ndummy <- dummyVars(formula = formula, data = cq2data)\npred <- predict(dummy, newdata = cq2data)\nhead(pred)\n```\n\n\n",
    "created" : 1488958345946.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3002922232",
    "id" : "5E997A72",
    "lastKnownWriteTime" : 1488988235,
    "last_content_update" : 1488988235037,
    "path" : "~/PycharmProjects/House/CqHouse/notebook.Rmd",
    "project_path" : "notebook.Rmd",
    "properties" : {
        "chunk_output_type" : "inline",
        "source_window_id" : "wxpnoajmwxel8",
        "tempName" : "Untitled2"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}